---
- name: Activate Service account
  hosts: cicd
  become: yes
  vars:
    key_src: /your/absolute/path/to/sa_key.json
    key_dest: /home/USERNAME/sa_key.json

  tasks:
  - name: copy Service account key from local to remote
    copy:
      src: "{{ key_src }}"
      dest: "{{ key_dest }}"
  - name: check key existed in hosts
    ansible.builtin.stat:
      path: "{{ key_dest }}"
    register: key_data
  - name: print key existence msg
    ansible.builtin.debug:
      msg: "The file {{ key_dest }} exist in hosts"
    when: key_data.stat.exists
  - name: gcloud auth
    shell: gcloud auth activate-service-account --key-file="{{ key_dest }}"
    register: auth_result
  - name: display result of gcloud service account auth
    debug: 
      var : auth_result.stderr_lines

- name: Install Docker
  hosts: cicd
  become: yes
  tasks:
  - name: update apt 
    ansible.builtin.apt:
      update_cache: yes
      state: latest
  - name: apt install prerequisites
    ansible.builtin.apt:
      name: 
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
      state: present
  - name: download apt key
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present
  - name: Add Docker repo to sources.list
    apt_repository:
      repo: deb https://download.docker.com/linux/debian bullseye stable
      state: present
  - name: update apt cache
    ansible.builtin.apt:
      update_cache: yes
      state: latest
  - name: install docker engine
    ansible.builtin.apt:
      name: 
        - docker-ce 
        - docker-ce-cli 
        - containerd.io 
        - docker-buildx-plugin 
        - docker-compose-plugin
      state: present

- name: Install Jenkins
  hosts: cicd
  become: yes
  
  tasks:
  - name: download apt key
    ansible.builtin.apt_key:
      url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
      state: present
  - name: Add Jenkins repo to sources.list
    apt_repository:
      repo: deb https://pkg.jenkins.io/debian-stable binary/
      state: present
      filename: jenkins
  - name: update apt cache
    ansible.builtin.apt:
      update_cache: yes
      state: latest
  - name: install java
    ansible.builtin.apt:
      name: openjdk-11-jre
      state: present
  - name: install jenkins
    ansible.builtin.apt:
      name: jenkins
      state: present
  - name: Ensure Jenkins is started and enabled
    ansible.builtin.systemd:
      name: jenkins
      enabled: yes
      state: started
  - name: Retrieve Initial Setup admin pwd
    shell: cat /var/lib/jenkins/secrets/initialAdminPassword
    register: jenkins_init_ad_pwd
  - name: display Initial Setup admin pwd
    debug:
      var: jenkins_init_ad_pwd
  - name: put user jenkins to docker group
    shell: sudo usermod -a -G docker jenkins
  - name: create /sys/fs/cgroup/systemd dir if not such dir existed
    file:
       path: /sys/fs/cgroup/systemd
       state: directory
    
  - name: configure cgroup mount
    ansible.builtin.shell: sudo mount -t cgroup -o none,name=systemd cgroup /sys/fs/cgroup/systemd